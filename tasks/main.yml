---

- name: Include version-specific variables for Ubuntu.
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
- name: Include version-specific variables for RedHat
  include_vars: "RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Debian | sketchy
  include: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Redhat | sketchy
  include: redhat.yml
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: create sketchy user
  user:
    name: "{{ sketchy_user }}"
    comment: "Sketchy user"
    home: "{{ sketchy_home }}"
  become: yes

# cmake < 3.5
- include: phantomjs-1.yml
  when: >
    (ansible_os_family=="RedHat" and ansible_distribution_major_version|int == 7) or
    (ansible_distribution=="Ubuntu" and ansible_distribution_major_version|int <= 16)

- include: phantomjs.yml
  when: >
    (ansible_os_family=="RedHat" and ansible_distribution_major_version|int > 7) or
    (ansible_distribution=="Ubuntu" and ansible_distribution_major_version|int > 16)

## ignore_errors as if repeating, get: msg: Local modifications exist in repository (force=no).
- name: git clone sketchy
  git:
    repo: https://github.com/Netflix/sketchy.git
    dest: "{{ sketchy_root }}"
    version: "{{ sketchy_version | default('HEAD') }}"
  ignore_errors: true
  become: yes
  become_user: "{{ sketchy_user }}"

- name: upgrade pip
  pip:
    name: pip
    version: 20.0.2
  when: ansible_distribution_release == 'xenial' or ansible_distribution_major_version == '7'

- name: Focal | install pip2
  command: "{{ item.c }}"
  args:
    chdir: /usr/local/bin
    creates: "{{ item.t }}"
  with_items:
    - { c: 'curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py', t: '/usr/local/bin/get-pip.py' }
    - { c: 'python2 /usr/local/bin/get-pip.py', t: '/usr/local/bin/pip2' }
  when: ansible_distribution_release == 'focal'

- name: install pip virtualenv
  pip:
    name:
      - zipp
      - virtualenv
    state: present
    executable: "{{ sketchy_python_pip | default('pip') }}"

- name: install werkzeug inside virtualenv - werkzeug#1616
  pip:
    name: werkzeug
    version: 0.16.1
    virtualenv: "{{ sketchy_root }}/env-sketchy"
    virtualenv_python: "{{ sketchy_python_bin | default('python') }}"
  become: yes
  become_user: "{{ sketchy_user }}"
- name: install sketchy pip dependencies inside virtualenv
  pip:
    name:
      - Celery
      - Flask
      - Flask-RESTful
      - Flask-SQLAlchemy
      - boto
      - lxml
      - requests
      - subprocess32
      - tldextract
      - netaddr
      - flask_script
      - gunicorn
    virtualenv: "{{ sketchy_root }}/env-sketchy"
    virtualenv_python: "{{ sketchy_python_bin | default('python') }}"
  become: yes
  become_user: "{{ sketchy_user }}"
- name: install local sketchy pip environment
  pip:
    name: "file://{{ sketchy_root }}"
    virtualenv: "{{ sketchy_root }}/env-sketchy"
    virtualenv_python: "{{ sketchy_python_bin | default('python') }}"
  become: yes
  become_user: "{{ sketchy_user }}"

- name: create sketchy db
  command: "{{ sketchy_root }}/env-sketchy/bin/python manage.py create_db"
  args:
    chdir: "{{ sketchy_root }}"
    creates: "{{ sketchy_root }}/sketchy-db.db"
  become: yes
  become_user: "{{ sketchy_user }}"

- name: ensure redis is bind to localhost
  lineinfile:
    dest: "{{ redis_conf }}"
    regexp: '^bind .*'
    line: 'bind 127.0.0.1'
  notify:
    - restart redis
- name: ensure service are enabled and started
  service: name={{ redis_svc }} state=started enabled=yes

- name: Update config - host
  replace:
    dest: "{{ sketchy_root }}/config-default.py"
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
  with_items:
    - { re: '127.0.0.1', rep: '{{ sketchy_host }}' }
  when: sketchy_host is defined and sketchy_host
- name: Update config - port
  replace:
    dest: "{{ sketchy_root }}/config-default.py"
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
  with_items:
    - { re: ':8000', rep: ':{{ sketchy_port }}' }
  when: sketchy_port is defined and sketchy_port
- name: Update config - use_ssl
  replace:
    dest: "{{ sketchy_root }}/config-default.py"
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
  with_items:
    - { re: "'use_ssl', False", rep: "'use_ssl', {{ sketchy_use_ssl }}" }
  when: sketchy_use_ssl is defined and sketchy_use_ssl|bool

- name: set sketchy supervisor config
  template:
    src: supervisor.ini
    dest: "{{ supervisor_confdir }}/sketchi.{{ supervisor_ext }}"
    mode: '0644'
    owner: "{{ sketchy_user }}"
  notify:
    - restart supervisor
- name: configure nginx for sketchy
  template: src=nginx-sketchy.conf dest="{{ nginx_confdir }}/sketchy.conf" mode=0644
  notify:
    - restart nginx

- include: certificate-selfsigned.yml

- name: enable sketchy nginx
  file: "src={{ nginx_confdir }}/sketchy.conf dest=/etc/nginx/sites-enabled/sketchy.conf state=link"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  notify:
    - restart nginx
